// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/keptn/kubernetes-utils/pkg (interfaces: ChartPackager)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	chart "helm.sh/helm/v3/pkg/chart"
)

// MockChartPackager is a mock of ChartPackager interface.
type MockChartPackager struct {
	ctrl     *gomock.Controller
	recorder *MockChartPackagerMockRecorder
}

// MockChartPackagerMockRecorder is the mock recorder for MockChartPackager.
type MockChartPackagerMockRecorder struct {
	mock *MockChartPackager
}

// NewMockChartPackager creates a new mock instance.
func NewMockChartPackager(ctrl *gomock.Controller) *MockChartPackager {
	mock := &MockChartPackager{ctrl: ctrl}
	mock.recorder = &MockChartPackagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChartPackager) EXPECT() *MockChartPackagerMockRecorder {
	return m.recorder
}

// PackageChart mocks base method.
func (m *MockChartPackager) PackageChart(arg0 *chart.Chart) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PackageChart", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PackageChart indicates an expected call of PackageChart.
func (mr *MockChartPackagerMockRecorder) PackageChart(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PackageChart", reflect.TypeOf((*MockChartPackager)(nil).PackageChart), arg0)
}
